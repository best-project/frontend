{"version":3,"sources":["images/loginIcon.svg","styles/globalStyle.js","pages/home/style.js","common/components/gradientLayout.js","common/components/Input.js","common/components/SubmitButton.js","config/variables.js","services/http/index.js","common/helpers/handleResponse.js","services/course/index.js","services/auth/index.js","services/routing/index.js","config/history.js","services/storage/index.js","services/index.js","common/helpers/notifications.js","components/forms/LoginForm.js","pages/home/Login.js","components/forms/RegisterForm.js","pages/home/Register.js","common/components/Card.js","components/Header.js","components/Content.js","components/CoursesWrapper.js","common/components/Select.js","common/helpers/dummyUploadPhotoRequest.js","common/components/Upload.js","components/CreateCourseModal.js","common/components/CreateCourseButton.js","pages/courses/index.js","components/forms/SettingsForm.js","components/Footer.js","pages/settings/index.js","components/AddWordModal.js","components/Table.js","pages/course/index.js","routes/routes.js","routes/AuthRoute.js","routes/index.js","App.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","styled","Layout","Image","img","BrandWrapper","div","LoginPanelWrapper","Wrapper","FormWrapper","Header","p","CenteredParagraph","JoinParagraph","GradientLayout","props","children","Input","placeholder","label","type","required","disabled","Item","form","getFieldDecorator","id","initialValue","rules","message","addonAfter","Container","Form","ButtonStyled","Button","SubmitButton","value","htmlType","apiBase","Methods","Object","freeze","GET","POST","PUT","PATCH","DELETE","HttpServiceFactory","fetch","storageService","this","url","makeRequest","undefined","body","method","token","JSON","parse","getItem","options","headers","Authorization","stringify","path","formData","FormData","keys","forEach","fieldName","append","handleResponse","httpService","response","text","then","data","ok","indexOf","status","authService","logout","window","location","reload","Promise","reject","currentUserSubject","BehaviorSubject","localStorage","AuthServiceFactory","removeItem","next","email","password","user","setItem","firstName","lastName","RoutingService","history","push","createBrowserHistory","StorageService","field","error","routingService","courseService","getCoursesMeta","getCourseDetails","courseId","postCourse","makeRequestForm","addWordToCourse","notificationType","Success","Info","Warning","Error","notificationText","showNotification","description","notification","duration","LoginForm","create","onSubmit","event","preventDefault","validateFields","err","login","catch","detail","Notification","size","onClick","LoginPage","currentUserValue","src","loginIcon","RegisterForm","registerUser","console","log","RegisterPage","Meta","Card","CardStyled","CourseCard","image","title","link","to","hoverable","style","width","cover","height","alt","Navigation","MenuWrapper","Paragraph","HeaderComponent","mode","selectable","Content","ContentComponent","CoursesWrapperComponent","Option","AntdSelect","Select","map","name","key","dummyUploadPhotoRequest","onSuccess","setTimeout","Upload","onChange","info","fileList","slice","setCurrentList","listType","multiple","customRequest","CreateCourseModalComponent","visible","onCancel","onCreate","onOk","CreateCourseButtonComponent","setCourses","useState","setVisible","formRef","setFormRef","currentFileList","setCurrentFileList","handleCreate","values","file","originFileObj","resetFields","saveFormRef","useCallback","node","ref","ListCoursesWrapper","FantomContainer","CoursesPage","coursesMeta","setCoursesMeta","useEffect","CreateCourseButton","Array","fill","Number","Math","random","SettingsForm","handleSubmit","Footer","SettingsPage","CollectionCreateForm","state","setCurrentfileList","items","setState","okText","layout","React","Component","EditableContext","createContext","EditableFormRow","index","Provider","EditableCell","editing","toggleEdit","input","focus","save","e","record","handleSave","currentTarget","renderCell","dataIndex","margin","onPressEnter","onBlur","className","paddingRight","editable","restProps","Consumer","EditableTable","showModal","handleDelete","dataSource","filter","item","word","translate","translation","count","newData","URL","createObjectURL","handleCancel","handleAdd","age","address","row","findIndex","splice","columns","render","length","onConfirm","courseDetails","components","cell","col","onCell","wrappedComponentRef","rowClassName","bordered","SpinWrapper","routes","component","auth","isAdmin","setIsAdmin","isLoading","setIsLoading","setCourseDetails","handleSetAdmin","a","match","params","extra","href","AuthRoute","exact","Routes","route","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4903c35e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loginIcon.b0b934dd.svg\";","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n    * {\n        box-sizing: border-box;\n    }\n`;\n","import styled from 'styled-components';\nimport { Layout } from 'antd';\n\nexport const LayoutStyled = styled(Layout)`\n    width: 75%;\n    margin-left: auto;\n    margin-right: auto;\n    padding-bottom: 60px;\n    background-color: white;\n    min-height: 100%;\n    text-align: center;\n    display: flex;\n    align-items: stretch;\n`;\n\nexport const Image = styled.img`\n    width: 500px;\n    margin: 1.25rem 0 0;\n    display: none;\n    @media only screen and (min-width: 1075px) {\n        display: block;\n    }\n`;\n\nexport const BrandWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    @media only screen and (min-width: 1075px) {\n        margin-right: 125px;\n    }\n`;\n\nexport const LoginPanelWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n    background-image: radial-gradient(circle, rgba(63, 94, 251, 1) 0%, rgba(28, 68, 131, 1) 100%);\n`;\n\nexport const Wrapper = styled(LoginPanelWrapper)`\n    @media only screen and (min-width: 1075px) {\n        flex-direction: row;\n    }\n`;\n\nexport const FormWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 30px;\n    margin-bottom: 20px;\n    width: 330px;\n    background: white;\n    border-radius: 3px;\n    @media only screen and (min-width: 576px) {\n        width: 400px;\n    }\n`;\n\nexport const Header = styled.p`\n    margin: 1rem 0;\n    text-align: center;\n    font-size: 22px;\n`;\n\nexport const CenteredParagraph = styled.p`\n    margin: 0.2rem 0;\n    text-align: center;\n`;\n\nexport const JoinParagraph = styled(CenteredParagraph)`\n    cursor: pointer;\n    text-decoration: underline;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    background-image: radial-gradient(circle, rgba(63, 94, 251, 1) 0%, rgba(28, 68, 131, 1) 100%);\n`;\n\nexport const GradientLayout = props => <Wrapper>{props.children}</Wrapper>;\n","import React from 'react';\nimport { Form, Input as AntdInput } from 'antd';\n\nexport const Input = ({\n    placeholder,\n    label,\n    type = 'string',\n    required = true,\n    disabled = false,\n    ...props\n}) => (\n    <Form.Item>\n        {props.form.getFieldDecorator(props.id, {\n            initialValue: props.initialValue,\n            rules: [{ required, message: props.message }],\n        })(\n            <AntdInput\n                type={type}\n                placeholder={placeholder || label}\n                disabled={disabled}\n                addonAfter={props.addonAfter}\n            />,\n        )}\n    </Form.Item>\n);\n","import * as React from 'react';\nimport { Button, Form } from 'antd';\nimport styled from 'styled-components';\n\nconst Container = styled(Form.Item)`\n    width: 100%;\n    margin: 0.5rem 0;\n`;\n\nconst ButtonStyled = styled(Button)`\n    width: 100%;\n    margin: 0.5rem 0;\n    background-color: #0066cc;\n`;\n\nexport const SubmitButton = ({ value, ...props }) => (\n    <Container>\n        <ButtonStyled type=\"primary\" htmlType=\"submit\" {...props}>\n            {value}\n        </ButtonStyled>\n    </Container>\n);\n","export const apiBase = 'http://35.240.73.34';\n\nexport const dateFormat = 'yyyy-MM-dd HH:mm';\n\nexport const loginPanelGradient = 'linear-gradient(0.9turn, #287ecd, #4239af 51%, #613dc9, #735bb6);';\n\nexport const jwtToken = 'currentUser';\n","import { jwtToken } from '../../config/variables';\n\nexport const Methods = Object.freeze({\n    GET: 'GET',\n    POST: 'POST',\n    PUT: 'PUT',\n    PATCH: 'PATCH',\n    DELETE: 'DELETE',\n});\n\nexport class HttpServiceFactory {\n    constructor(apiBase, fetch, storageService) {\n        this.apiBase = apiBase;\n        this.fetch = fetch;\n        this.storageService = new storageService();\n    }\n\n    GET(url) {\n        return this.makeRequest(Methods.GET, url, undefined);\n    }\n\n    POST(url, body) {\n        return this.makeRequest(Methods.POST, url, body);\n    }\n\n    PATCH(url, body) {\n        return this.makeRequest(Methods.PATCH, url, body);\n    }\n\n    makeRequest(method, url, body) {\n        const token = JSON.parse(this.storageService.getItem(jwtToken));\n\n        const headers = {\n            'Content-Type': 'application/json',\n            ...(token && { Authorization: `${token.token}` }),\n        };\n\n        const options = {\n            method,\n            headers,\n            body: JSON.stringify(body),\n        };\n        const path = `${this.apiBase}/${url}`;\n\n        return fetch(path, options);\n    }\n\n    makeRequestForm(method, url, body) {\n        const formData = new FormData();\n        Object.keys(body).forEach(fieldName => formData.append(fieldName, body[fieldName]));\n\n        const token = JSON.parse(this.storageService.getItem(jwtToken));\n        const headers = {\n            ...(token && { Authorization: `${token.token}` }),\n        };\n\n        const options = {\n            method,\n            headers,\n            body: formData,\n        };\n        const path = `${this.apiBase}/${url}`;\n\n        return fetch(path, options);\n    }\n}\n","import { authService } from '../../services';\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if ([401, 403].indexOf(response.status) !== -1) {\n                authService.logout();\n                window.location.reload();\n            }\n            return Promise.reject(data);\n        }\n        return data;\n    });\n}\n\nexport default handleResponse;\n","import handleResponse from '../../common/helpers/handleResponse.js';\nimport { Methods } from '../http/index.js';\n\nexport const courseServiceFactory = httpService => {\n    const getCoursesMeta = () => httpService.GET('courses/all/meta').then(handleResponse);\n    const getCourseDetails = courseId => httpService.GET(`course/${courseId}`).then(handleResponse);\n\n    const postCourse = data =>\n        httpService.makeRequestForm(Methods.POST, `course/create`, data).then(handleResponse);\n\n    const addWordToCourse = data => {\n        httpService.makeRequestForm(Methods.POST, `course/task/add`, data).then(handleResponse);\n    };\n\n    return {\n        getCoursesMeta,\n        getCourseDetails,\n        postCourse,\n        addWordToCourse,\n    };\n};\n","import { BehaviorSubject } from 'rxjs';\nimport handleResponse from '../../common/helpers/handleResponse.js';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nexport class AuthServiceFactory {\n    constructor(httpService, storageService) {\n        this.httpService = httpService;\n        this.storageService = new storageService();\n    }\n\n    currentUserValue() {\n        return currentUserSubject.value;\n    }\n\n    login(email, password) {\n        return this.httpService\n            .POST('login', { email, password })\n            .then(handleResponse)\n            .then(user => {\n                this.storageService.setItem('currentUser', JSON.stringify(user));\n                currentUserSubject.next(user);\n                return user;\n            });\n    }\n\n    logout = () => {\n        this.storageService.removeItem('currentUser');\n        currentUserSubject.next(null);\n    };\n\n    verifyToken(token) {\n        return this.httpService.POST('verify-token', token);\n    }\n\n    refreshToken(token) {\n        return this.httpService.PATCH('refresh-token', token);\n    }\n\n    registerUser(firstName, lastName, email, password) {\n        return this.httpService\n            .POST(`register/user`, { firstName, lastName, email, password })\n            .then(handleResponse);\n    }\n}\n","export class RoutingService {\n    constructor(history) {\n        this.history = history;\n    }\n\n    push(path) {\n        this.history.push(path);\n    }\n}\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","export class StorageService {\n    getItem(field) {\n        try {\n            return localStorage.getItem(field);\n        } catch (error) {\n            return error;\n        }\n    }\n\n    setItem(field, data) {\n        localStorage.setItem(field, data);\n    }\n\n    removeItem(field) {\n        localStorage.removeItem(field);\n    }\n}\n","import { apiBase } from '../config/variables';\nimport { HttpServiceFactory } from './http';\nimport { AuthServiceFactory } from './auth';\nimport { RoutingService } from './routing';\nimport { history } from '../config/history.js';\nimport { StorageService } from './storage';\nimport { courseServiceFactory } from './course';\n\nexport const httpService = new HttpServiceFactory(apiBase, fetch, StorageService);\nexport const routingService = new RoutingService(history);\nexport const authService = new AuthServiceFactory(httpService, StorageService);\nexport const courseService = courseServiceFactory(httpService);\n","import { notification } from 'antd';\n\nexport const notificationType = {\n    Success: 'success',\n    Info: 'info',\n    Warning: 'warning',\n    Error: 'error',\n};\n\nexport const notificationText = {\n    Success: 'Success',\n    Info: 'Please ensure the data you have entered is correct',\n    Warning: 'Something went wrong',\n    Error: 'Please update the data you have entered',\n};\n\nexport const showNotification = ({ message, description, type = notificationType.Error }) => {\n    notification[type]({\n        message,\n        description,\n        duration: 3,\n    });\n};\n","import * as React from 'react';\nimport { Form } from 'antd';\nimport { Input } from '../../common/components/Input';\nimport { SubmitButton } from '../../common/components/SubmitButton';\nimport { FormWrapper, Header, JoinParagraph, CenteredParagraph } from '../../pages/home/style';\nimport { authService, routingService } from '../../services/index';\nimport { showNotification, notificationText } from '../../common/helpers/notifications';\n\nconst LoginFormComponent = ({ form }) => {\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        form.validateFields((err, { email, password }) => {\n            if (!err) {\n                authService\n                    .login(email, password)\n                    .then(user => {\n                        routingService.push('/courses');\n                        return user;\n                    })\n                    .catch(err =>\n                        err.detail\n                            ? showNotification({ type: Notification.Success, message: err.detail })\n                            : showNotification({\n                                  type: Notification.Warning,\n                                  message: notificationText.Warning,\n                              }),\n                    );\n            }\n        });\n    };\n\n    return (\n        <FormWrapper>\n            <Form onSubmit={handleSubmit}>\n                <Header>Learn.IT</Header>\n                <Input\n                    id=\"email\"\n                    form={form}\n                    placeholder=\"Email\"\n                    message=\"Email is required\"\n                    type=\"email\"\n                />\n                <Input id=\"password\" type=\"password\" form={form} placeholder=\"Password\" />\n                <SubmitButton value=\"Sign in\" type=\"primary\" htmlType=\"submit\" size=\"large\" />\n                <CenteredParagraph>Don't have an account?</CenteredParagraph>\n                <JoinParagraph onClick={() => routingService.push('/register')}>\n                    Join Learn.IT\n                </JoinParagraph>\n            </Form>\n        </FormWrapper>\n    );\n};\n\nexport const LoginForm = Form.create()(LoginFormComponent);\n","import React from 'react';\nimport { BrandWrapper, Image, Wrapper } from './style';\nimport loginIcon from '../../images/loginIcon.svg';\nimport { GradientLayout } from '../../common/components/gradientLayout';\nimport { LoginForm } from '../../components/forms/LoginForm';\nimport { authService, routingService } from '../../services';\n\nconst LoginPage = () => {\n    if (authService.currentUserValue()) {\n        routingService.push('/courses');\n    }\n\n    return (\n        <GradientLayout>\n            <Wrapper>\n                <BrandWrapper>\n                    <Image src={loginIcon} />\n                </BrandWrapper>\n                <LoginForm />\n            </Wrapper>\n        </GradientLayout>\n    );\n};\n\nexport default LoginPage;\n","import * as React from 'react';\nimport { Form } from 'antd';\nimport { Input } from '../../common/components/Input';\nimport { SubmitButton } from '../../common/components/SubmitButton';\nimport { FormWrapper, Header, JoinParagraph, CenteredParagraph } from '../../pages/home/style';\nimport { authService, routingService } from '../../services/index';\nimport { showNotification, notificationType } from '../../common/helpers/notifications';\n\nconst RegisterFormComponent = ({ form }) => {\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        form.validateFields((err, { firstName, lastName, email, password }) => {\n            if (!err) {\n                authService\n                    .registerUser(firstName, lastName, email, password)\n                    .then(user => {\n                        showNotification({\n                            type: notificationType.Success,\n                            message: 'Account has been created.',\n                        });\n                        routingService.push('/');\n                        return user;\n                    })\n                    .catch(err => console.log(err));\n            }\n        });\n    };\n    return (\n        <FormWrapper>\n            <Form onSubmit={handleSubmit}>\n                <Header>Learn.IT</Header>\n                <Input\n                    id=\"email\"\n                    form={form}\n                    placeholder=\"Email\"\n                    message=\"Email is required\"\n                    type=\"email\"\n                />\n                <Input id=\"password\" type=\"password\" form={form} placeholder=\"Password\" />\n                <Input\n                    id=\"firstName\"\n                    form={form}\n                    placeholder=\"First Name\"\n                    message=\"First name is required\"\n                    type=\"text\"\n                />\n                <Input\n                    id=\"lastName\"\n                    form={form}\n                    placeholder=\"Last name\"\n                    message=\"Last name is required\"\n                    type=\"text\"\n                />\n                <SubmitButton value=\"Sign up\" type=\"primary\" htmlType=\"submit\" size=\"large\" />\n                <CenteredParagraph>Already have an account?</CenteredParagraph>\n                <JoinParagraph onClick={() => routingService.push('/')}>Login to Learn.IT</JoinParagraph>\n            </Form>\n        </FormWrapper>\n    );\n};\n\nexport const RegisterForm = Form.create()(RegisterFormComponent);\n","import React from 'react';\nimport { BrandWrapper, Image, Wrapper } from './style';\nimport loginIcon from '../../images/loginIcon.svg';\nimport { GradientLayout } from '../../common/components/gradientLayout';\nimport { RegisterForm } from '../../components/forms/RegisterForm';\nimport { routingService, authService } from '../../services';\n\nconst RegisterPage = () => {\n    if (authService.currentUserValue()) {\n        routingService.push('/courses');\n    }\n\n    return (\n        <GradientLayout>\n            <Wrapper>\n                <BrandWrapper>\n                    <Image src={loginIcon} />\n                </BrandWrapper>\n                <RegisterForm />\n            </Wrapper>\n        </GradientLayout>\n    );\n};\n\nexport default RegisterPage;\n","import React from 'react';\nimport { Card } from 'antd';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst { Meta } = Card;\n\nconst CardStyled = styled(Card)`\n    box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.15);\n    margin-bottom: 15px;\n`;\n\nexport const CourseCard = ({ courseId, image, title, description }) => {\n    const link = '/course/' + courseId;\n    return (\n        <Link to={link}>\n            <CardStyled\n                hoverable\n                style={{ width: 240 }}\n                cover={<img style={{ height: 180 }} alt=\"example\" src={image} />}\n            >\n                <Meta title={title} description={description} />\n            </CardStyled>\n        </Link>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Menu } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { routingService, authService } from '../services';\nimport { StorageService } from '../services/storage';\n\nconst Navigation = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    padding: 1.5rem 1rem;\n    margin-bottom: 2rem;\n    margin: auto;\n    max-width: 1200px;\n`;\n\nconst MenuWrapper = styled.div`\n    display: none;\n\n    @media only screen and (min-width: 576px) {\n        display: flex;\n        align-items: center;\n    }\n`;\n\nconst Paragraph = styled.p`\n    display: flex;\n    justify-content: right;\n    flex-wrap: wrap;\n    padding: 0rem 1rem;\n    margin: auto;\n    max-width: 1200px;\n`;\n\nexport const HeaderComponent = () => {\n    const storageService = new StorageService();\n    const data = JSON.parse(storageService.getItem('currentUser'));\n    if (!data) {\n        routingService.push('/');\n    }\n\n    return (\n        <>\n            <Navigation>\n                <Link to=\"/\">\n                    <h1>Learn.IT</h1>\n                </Link>\n                <MenuWrapper>\n                    <Menu mode=\"horizontal\" selectable={false}>\n                        <Menu.Item onClick={() => routingService.push('/')}>Courses</Menu.Item>\n                        <Menu.Item onClick={() => routingService.push('/settings')}>Settings</Menu.Item>\n                        <Menu.Item onClick={authService.logout}>\n                            <Link to=\"/\">Log out</Link>\n                        </Menu.Item>\n                    </Menu>\n                </MenuWrapper>\n            </Navigation>\n            <Paragraph>\n                You are logged as\n                <strong>\n                    &nbsp;{data && data.firstName} {data && data.lastName}\n                </strong>\n            </Paragraph>\n        </>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Content = styled.div`\n    margin: 2rem auto;\n    padding: 0 1rem;\n    max-width: 1200px;\n`;\n\nexport const ContentComponent = props => <Content>{props.children}</Content>;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const CoursesWrapperComponent = props => <Wrapper>{props.children}</Wrapper>;\n","import React from 'react';\nimport { Form, Select as AntdSelect } from 'antd';\n\nconst { Option } = AntdSelect;\n\nexport const Select = props => (\n    <Form.Item>\n        {props.form.getFieldDecorator(props.id, {\n            initialValue: props.initialValue,\n            rules: [{ required: true, message: props.message }],\n        })(\n            <AntdSelect initialValue={props.initialValue}>\n                {props.options.map(({ value, name }) => (\n                    <Option key={name} value={value}>\n                        {name}\n                    </Option>\n                ))}\n            </AntdSelect>,\n        )}\n    </Form.Item>\n);\n","export const dummyUploadPhotoRequest = ({ onSuccess }) => {\n    setTimeout(() => {\n        onSuccess('ok');\n    }, 0);\n};\n","import * as React from 'react';\nimport { Form, Upload as AntdUpload, Button, Icon } from 'antd';\nimport { dummyUploadPhotoRequest } from '../helpers/dummyUploadPhotoRequest';\n\nexport const Upload = props => {\n    const handleOnChange = info => {\n        let fileList = [...info.fileList];\n        fileList = fileList.slice(-1);\n\n        props.setCurrentList(fileList);\n    };\n\n    return (\n        <Form.Item>\n            {props.form.getFieldDecorator(props.id, {\n                initialValue: props.initialValue,\n                rules: [{ required: true, message: props.message }],\n            })(\n                <AntdUpload\n                    onChange={handleOnChange}\n                    listType=\"image\"\n                    multiple={false}\n                    fileList={props.fileList}\n                    customRequest={dummyUploadPhotoRequest}\n                >\n                    <Button>\n                        <Icon type=\"upload\" /> Upload course's image\n                    </Button>\n                </AntdUpload>,\n            )}\n        </Form.Item>\n    );\n};\n","import React from 'react';\nimport { Form, Modal, Button, Icon } from 'antd';\nimport { Input } from '../common/components/Input';\nimport { Select } from '../common/components/Select';\nimport { Upload } from '../common/components/Upload';\n\nconst CreateCourseModal = ({ visible, onCancel, onCreate, fileList, setCurrentList, form }) => {\n    const initialValue = 'normal';\n    const selectTypes = [\n        {\n            name: 'Normal',\n            value: 'normal',\n        },\n        {\n            name: 'Puzzle',\n            value: 'puzzle',\n        },\n    ];\n\n    return (\n        <Modal title=\"Create new course\" visible={visible} onOk={onCreate} onCancel={onCancel}>\n            <Form>\n                <Input id=\"name\" form={form} label=\"Course Name\" initialValue=\"\" />\n                <Input id=\"description\" form={form} label=\"Description\" initialValue=\"\" />\n                <Select initialValue={initialValue} options={selectTypes} form={form} id=\"type\" />\n                <Upload\n                    listType=\"image\"\n                    multiple={false}\n                    fileList={fileList}\n                    setCurrentList={setCurrentList}\n                    form={form}\n                    id=\"image\"\n                >\n                    <Button>\n                        <Icon type=\"upload\" /> Upload course's image\n                    </Button>\n                </Upload>\n            </Form>\n        </Modal>\n    );\n};\n\nexport const CreateCourseModalComponent = Form.create()(CreateCourseModal);\n","import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { CreateCourseModalComponent } from '../../components/CreateCourseModal';\nimport { SubmitButton } from '../../common/components/SubmitButton';\nimport { courseService } from '../../services';\nimport { showNotification, notificationType } from '../../common/helpers/notifications';\n\nexport const Wrapper = styled.div`\n    margin-bottom: 20px;\n`;\n\nconst CreateCourseButtonComponent = ({ setCourses }) => {\n    const [visible, setVisible] = useState(false);\n    const [formRef, setFormRef] = useState(null);\n    const [currentFileList, setCurrentFileList] = useState([]);\n\n    const handleCreate = () => {\n        formRef.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            const data = {\n                ...values,\n                image: values.image.file.originFileObj,\n            };\n            courseService\n                .postCourse(data)\n                .then(() => {\n                    showNotification({\n                        type: notificationType.Success,\n                        message: 'Course has been added.',\n                    });\n                })\n                .catch(() => {\n                    showNotification({\n                        type: notificationType.Success,\n                        message: 'Word has been added.',\n                    });\n                })\n                .then(() => {\n                    courseService.getCoursesMeta().then(setCourses);\n                });\n\n            formRef.resetFields();\n            setVisible(false);\n        });\n    };\n\n    const saveFormRef = useCallback(node => {\n        if (node !== null) {\n            setFormRef(node);\n        }\n    }, []);\n\n    return (\n        <Wrapper>\n            <SubmitButton type=\"primary\" onClick={() => setVisible(true)} value=\"Create new course\" />\n            <CreateCourseModalComponent\n                ref={saveFormRef}\n                visible={visible}\n                onCancel={() => setVisible(false)}\n                onCreate={() => handleCreate()}\n                fileList={currentFileList}\n                setCurrentList={setCurrentFileList}\n            />\n        </Wrapper>\n    );\n};\n\nexport default CreateCourseButtonComponent;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { courseService } from '../../services';\nimport { CourseCard } from '../../common/components/Card';\nimport { apiBase } from '../../config/variables';\nimport { HeaderComponent } from '../../components/Header';\nimport { ContentComponent } from '../../components/Content';\nimport { CoursesWrapperComponent } from '../../components/CoursesWrapper';\nimport CreateCourseButtonComponent from '../../common/components/CreateCourseButton';\n\nconst ListCoursesWrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n`;\n\nconst FantomContainer = styled.div`\n    margin: 5px;\n    min-width: 240px;\n    max-width: 240px;\n    flex: 1;\n`;\n\nconst CoursesPage = () => {\n    const [coursesMeta, setCoursesMeta] = useState([]);\n\n    useEffect(() => {\n        courseService.getCoursesMeta().then(setCoursesMeta);\n    }, []);\n\n    return (\n        <CoursesWrapperComponent>\n            <HeaderComponent />\n            <ContentComponent>\n                <CreateCourseButtonComponent setCourses={setCoursesMeta} />\n                <h2>All available courses</h2>\n                <ListCoursesWrapper>\n                    {coursesMeta.map(({ id, name, description, image }) => {\n                        return (\n                            <CourseCard\n                                key={id}\n                                courseId={id}\n                                title={name}\n                                description={description}\n                                image={apiBase + image}\n                            />\n                        );\n                    })}\n                    {Array(4)\n                        .fill(4)\n                        .map(() => (\n                            <FantomContainer key={Number(Math.random())} />\n                        ))}\n                </ListCoursesWrapper>\n            </ContentComponent>\n        </CoursesWrapperComponent>\n    );\n};\n\nexport default CoursesPage;\n","import React from 'react';\nimport { Input } from '../../common/components/Input';\nimport { Form } from 'antd';\nimport { SubmitButton } from '../../common/components/SubmitButton';\nimport { authService } from '../../services';\n\n// ten plik jest do refaktoru\n\nconst SettingsFormComponent = ({ form }) => {\n    const user = authService.currentUserValue();\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        form.validateFields((err, { email, password }) => {\n            if (!err) {\n                // tutaj trzeba pamietac o zrobieniu update currentUser w localsotrage\n                console.log('validate');\n            }\n        });\n    };\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Input id=\"email\" form={form} label=\"E-mail\" initialValue={user.email} />\n            <Input id=\"firstName\" form={form} label=\"First Name\" initialValue={user.firstName} />\n            <Input id=\"lastName\" form={form} label=\"Last Name\" initialValue={user.lastName} />\n\n            <SubmitButton\n                value=\"Submit changes\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                size=\"large\"\n                onClick={handleSubmit}\n            />\n        </Form>\n    );\n};\n\nexport const SettingsForm = Form.create()(SettingsFormComponent);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Layout } from 'antd';\n\nconst { Footer } = Layout;\n\nconst FooterStyled = styled(Footer)`\n    background-image: radial-gradient(circle, rgba(63, 94, 251, 1) 0%, rgba(28, 68, 131, 1) 100%);\n    color: white;\n    position: fixed;\n    left: 0;\n    bottom: -20px;\n    right: 0;\n`;\n\nexport const FooterComponent = () => <FooterStyled>Learn.IT</FooterStyled>;\n","import React from 'react';\nimport { SettingsForm } from '../../components/forms/SettingsForm';\nimport { FooterComponent } from '../../components/Footer';\nimport { ContentComponent } from '../../components/Content';\nimport { CoursesWrapperComponent } from '../../components/CoursesWrapper';\nimport { HeaderComponent } from '../../components/Header';\n\nconst SettingsPage = () => {\n    return (\n        <CoursesWrapperComponent>\n            <HeaderComponent />\n            <ContentComponent>\n                <SettingsForm />\n            </ContentComponent>\n            {/* <FooterComponent /> */}\n        </CoursesWrapperComponent>\n    );\n};\n\nexport default SettingsPage;\n","import React from 'react';\nimport { Modal, Form, Input, Button, Icon } from 'antd';\nimport { Upload } from '../common/components/Upload';\n\nconst CollectionCreateForm = Form.create({ name: 'form_in_modal' })(\n    // eslint-disable-next-line\n    class extends React.Component {\n        state = {\n            fileList: [],\n        };\n        setCurrentfileList = items => {\n            this.setState({ fileList: items });\n            return items;\n        };\n\n        render() {\n            const { visible, onCancel, onCreate, form } = this.props;\n            const { getFieldDecorator } = form;\n\n            return (\n                <Modal\n                    visible={visible}\n                    title=\"Add new word\"\n                    okText=\"Add new word\"\n                    onCancel={onCancel}\n                    onOk={onCreate}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label=\"Word\">\n                            {getFieldDecorator('word', {\n                                rules: [\n                                    { required: true, message: 'Please input the title of collection!' },\n                                ],\n                            })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label=\"Translation\">\n                            {getFieldDecorator('translation', {\n                                rules: [\n                                    { required: true, message: 'Please input the title of collection!' },\n                                ],\n                            })(<Input />)}\n                        </Form.Item>\n                        <Upload\n                            listType=\"image\"\n                            multiple={false}\n                            fileList={this.fileList}\n                            setCurrentList={this.setCurrentfileList}\n                            form={form}\n                            id=\"image\"\n                        >\n                            <Button>\n                                <Icon type=\"upload\" /> Upload image for word\n                            </Button>\n                        </Upload>\n                    </Form>\n                </Modal>\n            );\n        }\n    },\n);\n\nexport default CollectionCreateForm;\n","import React from 'react';\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\nimport CollectionCreateForm from './AddWordModal';\nimport { SubmitButton } from '../common/components/SubmitButton';\nimport { apiBase } from '../config/variables';\nimport { courseService } from '../services';\nimport { notificationType, showNotification } from '../common/helpers/notifications';\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n    <EditableContext.Provider value={form}>\n        <tr {...props} />\n    </EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n    state = {\n        editing: false,\n    };\n\n    toggleEdit = () => {\n        const editing = !this.state.editing;\n        this.setState({ editing }, () => {\n            if (editing) {\n                this.input.focus();\n            }\n        });\n    };\n\n    save = e => {\n        const { record, handleSave } = this.props;\n        this.form.validateFields((error, values) => {\n            if (error && error[e.currentTarget.id]) {\n                return;\n            }\n            this.toggleEdit();\n            handleSave({ ...record, ...values });\n        });\n    };\n\n    renderCell = form => {\n        this.form = form;\n        const { children, dataIndex, record, title } = this.props;\n        const { editing } = this.state;\n        return editing ? (\n            <Form.Item style={{ margin: 0 }}>\n                {form.getFieldDecorator(dataIndex, {\n                    rules: [\n                        {\n                            required: true,\n                            message: `${title} is required.`,\n                        },\n                    ],\n                    initialValue: record[dataIndex],\n                })(\n                    <Input\n                        ref={node => (this.input = node)}\n                        onPressEnter={this.save}\n                        onBlur={this.save}\n                    />,\n                )}\n            </Form.Item>\n        ) : (\n            <div\n                className=\"editable-cell-value-wrap\"\n                style={{ paddingRight: 24 }}\n                onClick={this.toggleEdit}\n            >\n                {children}\n            </div>\n        );\n    };\n\n    render() {\n        const {\n            editable,\n            dataIndex,\n            title,\n            record,\n            index,\n            handleSave,\n            children,\n            ...restProps\n        } = this.props;\n        return (\n            <td {...restProps}>\n                {editable ? (\n                    <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n                ) : (\n                    children\n                )}\n            </td>\n        );\n    }\n}\n\nexport default class EditableTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.columns = [\n            {\n                title: 'word',\n                dataIndex: 'word',\n                width: '30%',\n                editable: false,\n            },\n            {\n                title: 'translation',\n                dataIndex: 'translation',\n                editable: false,\n            },\n            {\n                title: 'image',\n                dataIndex: 'image',\n                editable: false,\n                render: (text, record) => <img width={100} height={100} src={text} />,\n            },\n            {\n                title: 'operation',\n                dataIndex: 'operation',\n                render: (text, record) =>\n                    this.state.dataSource.length >= 1 ? (\n                        <Popconfirm\n                            title=\"Sure to delete?\"\n                            onConfirm={() => this.handleDelete(record.key)}\n                        >\n                            <a>Delete</a>\n                        </Popconfirm>\n                    ) : null,\n            },\n        ];\n\n        let courseDetails = [];\n        if (props.courseDetails && props.courseDetails[0] && props.courseDetails[0].data) {\n            courseDetails = props.courseDetails[0].data;\n            courseDetails = courseDetails.map(({ translate, word, image, id }) => {\n                return {\n                    key: id,\n                    word: word,\n                    translation: translate,\n                    image: apiBase + image,\n                };\n            });\n        }\n\n        this.state = {\n            dataSource: courseDetails,\n            count: courseDetails.length,\n            visible: false,\n        };\n    }\n\n    showModal = () => {\n        this.setState({ visible: true });\n    };\n\n    handleDelete = key => {\n        const dataSource = [...this.state.dataSource];\n        this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\n    };\n\n    handleCreate = () => {\n        const { form } = this.formRef.props;\n        form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            const data = {\n                courseId: this.props.courseId,\n                word: values.word,\n                translate: values.translation,\n                image: values.image.file.originFileObj,\n            };\n            form.resetFields();\n\n            courseService.addWordToCourse(data);\n\n            const { count, dataSource } = this.state;\n            const newData = {\n                key: count,\n                word: values.word,\n                translation: values.translation,\n                image: URL.createObjectURL(values.image.file.originFileObj),\n            };\n            this.setState({ visible: false });\n\n            this.setState({\n                dataSource: [...dataSource, newData],\n                count: count + 1,\n            });\n\n            showNotification({\n                type: notificationType.Success,\n                message: 'Word has been added.',\n            });\n        });\n    };\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    handleCancel = () => {\n        this.setState({ visible: false });\n    };\n\n    handleAdd = () => {\n        const { count, dataSource } = this.state;\n        const newData = {\n            key: count,\n            name: `Edward King ${count}`,\n            age: 32,\n            address: `London, Park Lane no. ${count}`,\n        };\n        this.setState({\n            dataSource: [...dataSource, newData],\n            count: count + 1,\n        });\n\n        this.setState({ visible: true });\n    };\n\n    handleSave = row => {\n        const newData = [...this.state.dataSource];\n        const index = newData.findIndex(item => row.key === item.key);\n        const item = newData[index];\n        newData.splice(index, 1, {\n            ...item,\n            ...row,\n        });\n        this.setState({ dataSource: newData });\n    };\n\n    render() {\n        const { dataSource } = this.state;\n        const components = {\n            body: {\n                row: EditableFormRow,\n                cell: EditableCell,\n            },\n        };\n        const columns = this.columns.map(col => {\n            if (!col.editable) {\n                return col;\n            }\n            return {\n                ...col,\n                onCell: record => ({\n                    record,\n                    editable: col.editable,\n                    dataIndex: col.dataIndex,\n                    title: col.title,\n                    handleSave: this.handleSave,\n                }),\n            };\n        });\n        return (\n            <div>\n                <SubmitButton type=\"primary\" onClick={this.showModal} value=\"Add new word\" />\n                <CollectionCreateForm\n                    wrappedComponentRef={this.saveFormRef}\n                    visible={this.state.visible}\n                    onCancel={this.handleCancel}\n                    onCreate={this.handleCreate}\n                />\n                <Table\n                    components={components}\n                    rowClassName={() => 'editable-row'}\n                    bordered\n                    dataSource={dataSource}\n                    columns={columns}\n                />\n            </div>\n        );\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { CoursesWrapperComponent } from '../../components/CoursesWrapper';\nimport { HeaderComponent } from '../../components/Header';\nimport { ContentComponent } from '../../components/Content';\nimport { courseService, routingService, authService } from '../../services';\nimport { Card, Spin } from 'antd';\nimport { apiBase } from '../../config/variables';\nimport EditableTable from '../../components/Table';\n\nconst SpinWrapper = styled.div`\n    flex-direction: column;\n    justify-content: center;\n    display: flex;\n    min-height: 100vh;\n`;\n\nconst CoursePage = props => {\n    const user = authService.currentUserValue();\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [courseDetails, setCourseDetails] = useState([]);\n\n    const handleSetAdmin = async () => {\n        console.log(courseDetails);\n        console.log(user);\n\n        setIsAdmin(false);\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n        courseService\n            .getCourseDetails(props.match.params.courseId)\n            .then(setCourseDetails)\n            .then(() => setIsLoading(false))\n            .catch(err => routingService.push('/'));\n        user && handleSetAdmin();\n    }, [props.match.params.courseId]);\n\n    return (\n        <>\n            {isLoading ? (\n                <SpinWrapper>\n                    <Spin size=\"large\" />\n                </SpinWrapper>\n            ) : (\n                <CoursesWrapperComponent>\n                    <HeaderComponent />\n                    <ContentComponent>\n                        <Card\n                            title={courseDetails[0] && courseDetails[0].name}\n                            extra={user && isAdmin ? <a href=\"#\">Edit</a> : <></>}\n                        >\n                            <img\n                                style={{ height: 180 }}\n                                alt=\"example\"\n                                src={courseDetails[0] && apiBase + courseDetails[0].image}\n                            />\n                            <p>\n                                <b>Description:</b> {courseDetails[0] && courseDetails[0].description}\n                            </p>\n                            <p>\n                                <b>Type:</b> {courseDetails[0] && courseDetails[0].type}\n                            </p>\n                        </Card>\n                        <EditableTable\n                            courseDetails={courseDetails}\n                            courseId={props.match.params.courseId}\n                        />\n                    </ContentComponent>\n                </CoursesWrapperComponent>\n            )}\n        </>\n    );\n};\n\nexport default CoursePage;\n","import LoginPage from '../pages/home/Login';\nimport RegisterPage from '../pages/home/Register';\nimport CoursesPage from '../pages/courses';\nimport SettingsPage from '../pages/settings';\nimport CoursePage from '../pages/course';\n\nexport const routes = [\n    {\n        path: '/',\n        component: LoginPage,\n    },\n    {\n        path: '/register',\n        component: RegisterPage,\n    },\n    {\n        path: '/courses',\n        component: CoursesPage,\n        auth: true,\n    },\n    {\n        path: '/settings',\n        component: SettingsPage,\n        auth: true,\n    },\n    {\n        path: '/course/:courseId',\n        component: CoursePage,\n        auth: true,\n    },\n];\n","import * as React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authService } from '../services';\n\nconst AuthRoute = ({ path, component }) =>\n    !authService.currentUserValue() ? (\n        <Redirect to=\"/\" />\n    ) : (\n        <Route exact path={path} component={component} />\n    );\n\nexport default AuthRoute;\n","import React from 'react';\nimport { routes } from './routes';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport AuthRoute from './AuthRoute';\nimport { history } from '../config/history';\n\nexport const Routes = () => (\n    <Router history={history}>\n        <Switch>\n            {routes.map(route =>\n                route.auth ? (\n                    <AuthRoute key={route.path} path={route.path} component={route.component} />\n                ) : (\n                    <Route exact key={route.path} path={route.path} component={route.component} />\n                ),\n            )}\n        </Switch>\n    </Router>\n);\n","import React from 'react';\nimport { GlobalStyle } from './styles/globalStyle';\nimport { Routes } from './routes';\n\nconst App = () => {\n    return (\n        <>\n            <GlobalStyle />\n            <Routes />\n        </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}